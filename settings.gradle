plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '1.+'
    id 'pl.allegro.tech.build.axion-release' version '1.+' apply false
}

def versioning = new Properties()
file('versioning.properties').withInputStream {
    versioning.load(it)
}

rootProject.name = versioning.name

gradle.rootProject {
    apply plugin: 'pl.allegro.tech.build.axion-release'
    scmVersion {
        releaseOnlyOnReleaseBranches = true
        releaseBranchNames = ['main']
        localOnly = true
    }
    project.version = versioning.version = scmVersion.version
    versioning.each{ k, v ->
        try {
            (project.hasProperty(k) ? project : project.ext).set(k, v)
        } catch(e) {}
    }
    task updateVersioning(type: Copy) {
        from 'versioning.properties'
        into 'build/resources/main'
        inputs.properties version: versioning.version
        doLast {
            new File(outputs.files.singleFile.path, inputs.files.singleFile.name).withOutputStream {
                versioning.store(it, null)
            }
        }
    }
    afterEvaluate {
        processResources.dependsOn updateVersioning
    }
}
